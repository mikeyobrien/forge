// ABOUTME: Type definitions for Claude command output organization enhancement
// ABOUTME: Defines structures for command metadata and document organization

import { PARACategory, ProjectStatus } from '../models/types.js';

/**
 * Types of documents generated by Claude commands
 */
export enum CommandDocumentType {
  Design = 'design',
  Todo = 'todo',
  Report = 'report',
  Spec = 'spec',
  Review = 'review',
  Plan = 'plan',
  Summary = 'summary',
}

/**
 * Command metadata for document generation
 */
export interface CommandMetadata {
  /** Type of command that generated this document */
  command_type: CommandDocumentType;

  /** Parent project name this document belongs to */
  project?: string;

  /** Status of the document */
  status: 'active' | 'completed' | 'superseded';

  /** Command that generated this document (e.g., "/plan", "/spec") */
  generated_by: string;

  /** Path to spec/plan being implemented */
  implements?: string;

  /** Path to document this replaces */
  supersedes?: string;

  /** Array of related document paths */
  related_docs?: string[];

  /** What context files were loaded */
  context_source?: string[];
}

/**
 * Enhanced document frontmatter with command metadata
 */
export interface CommandDocumentFrontmatter {
  // Base required fields
  title: string;
  category: PARACategory;
  created: string;
  modified: string;
  tags: string[];

  // Command-specific required fields
  command_type: CommandDocumentType;
  project?: string;
  status: 'active' | 'completed' | 'superseded';
  generated_by: string;

  // Optional relationships
  implements?: string;
  supersedes?: string;
  related_docs?: string[];
  context_source?: string[];

  // Project-specific fields
  project_status?: ProjectStatus;
  due_date?: string;
  parent?: string;
  
  // Allow additional fields
  [key: string]: unknown;
}

/**
 * Parameters for creating a command-generated document
 */
export interface CreateCommandDocumentParams {
  /** Document type being created */
  documentType: CommandDocumentType;

  /** Base name for the document (without type prefix) */
  baseName: string;

  /** Project this document belongs to */
  project?: string | undefined;

  /** Title of the document */
  title: string;

  /** Initial content */
  content: string;

  /** Tags for categorization */
  tags: string[];

  /** Command that is generating this */
  generatedBy: string;

  /** PARA category (can be inferred from project) */
  category?: PARACategory;

  /** Additional metadata */
  metadata?: Partial<CommandMetadata> | undefined;
}

/**
 * Result of organizing a command document
 */
export interface OrganizeDocumentResult {
  /** Final path where document was created */
  path: string;

  /** Whether an existing document was found */
  conflictResolved: boolean;

  /** Original proposed name if conflict occurred */
  originalName?: string | undefined;

  /** Message about the operation */
  message: string;
}

/**
 * Configuration for command document organization
 */
export interface CommandOrganizationConfig {
  /** Root directory for context */
  contextRoot: string;

  /** Whether to auto-create project directories */
  autoCreateProjectDirs: boolean;

  /** Whether to update project indexes */
  updateIndexes: boolean;

  /** Custom naming patterns by document type */
  namingPatterns?: {
    [key in CommandDocumentType]?: string;
  };
}
